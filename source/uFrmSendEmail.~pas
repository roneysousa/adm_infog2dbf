unit uFrmSendEmail;

interface

uses
  Classes, SysUtils, Forms, Controls, Graphics, Dialogs, StdCtrls,
  ComCtrls, ACBrMail, types, ACBrBase, Menus, ExtCtrls,Windows, DB,
  DBClient, Variants;

type

  { TForm1 }

  TFrmSendMail = class(TForm)
    ACBrMail1: TACBrMail;
    MainMenu1: TMainMenu;
    Opes1: TMenuItem;
    Configuraes1: TMenuItem;
    N1: TMenuItem;
    Fechar1: TMenuItem;
    Panel1: TPanel;
    Panel2: TPanel;
    listaCliente: TListBox;
    Panel3: TPanel;
    Label6: TLabel;
    edtDe: TEdit;
    Label2: TLabel;
    edSubject: TEdit;
    Panel4: TPanel;
    ProgressBar1: TProgressBar;
    Panel5: TPanel;
    bEnviar: TButton;
    pnlBody: TPanel;
    Label3: TLabel;
    mAltBody: TMemo;
    Label5: TLabel;
    mLog: TMemo;
    listEmails: TListBox;
    cdsListaEnviados: TClientDataSet;
    cdsListaEnviadosemail: TStringField;
    cdsListaEnviadosarquivo: TStringField;
    Label1: TLabel;
    procedure ACBrMail1AfterMailProcess(Sender: TObject);
    procedure ACBrMail1BeforeMailProcess(Sender: TObject);
    procedure ACBrMail1MailException(const AMail: TACBrMail;
      const E: Exception; var ThrowIt: Boolean);
    procedure ACBrMail1MailProcess(const AMail: TACBrMail;
      const aStatus: TMailStatus);
    procedure bEnviarClick(Sender: TObject);
    procedure Fechar1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Configuraes1Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
  private
    procedure AjustaParametrosDeEnvio;
    Procedure CarregarListaClientes(aNomeFile : String);
    Procedure CarregarListaEmails(aNomeFile : String);
    Procedure CarregarDados();
    Procedure AddRegistro(aEmail, aFile : String);
    { private declarations }
  public
    { public declarations }
  end;

var
  FrmSendMail: TFrmSendMail;

implementation

Uses mimemess, uFrmConfigEmail, udmADM;

{$R *.dfm}

{ TForm1 }

procedure TFrmSendMail.bEnviarClick(Sender: TObject);
var
  Dir, ArqXML, aEmail, aArquivo: String;
  MS: TMemoryStream;
  P, N, I, posicao, iTamanho : Integer;
begin
  mLog.Lines.Clear;
  ProgressBar1.Position := 1;

  Dir := ExtractFilePath(ParamStr(0))+'PDF\';

  P := pos(' - ', edSubject.Text);
  if P > 0 then
  begin
    N := StrToIntDef( copy(edSubject.Text, P+3, 5), 0) + 1;
    edSubject.Text := copy(edSubject.Text, 1, P+2) + IntToStr(N);
  end;

  bEnviar.Enabled := False;
  Try

      // mensagem principal do e-mail. pode ser html ou texto puro
      //if cbUsarTXT.Checked then
      for i:= 0 to listEmails.Items.Count-1 do
      begin
           posicao :=  pos('::',listEmails.Items[i]);
           iTamanho := Length(listEmails.Items[i]);
           aEmail   := Copy(listEmails.Items[i],1,posicao-1);
           aArquivo := Copy(listEmails.Items[i],posicao+2, iTamanho) ;

           if not (cdsListaEnviados.Locate('email;arquivo',
                VarArrayOf([aEmail,aArquivo]),[])) then
           begin
                ACBrMail1.Clear;
                ACBrMail1.IsHTML := False;
                ACBrMail1.Subject := edSubject.Text;

                AjustaParametrosDeEnvio;
                ACBrMail1.AddAddress(aEmail,aEmail);


                ACBrMail1.AltBody.Assign( mAltBody.Lines );
                // Anexo
                if FileExists(Dir+aArquivo) then
                   ACBrMail1.AddAttachment(Dir+aArquivo, 'Boleto');

                ACBrMail1.Send( False );
                Sleep(100);
                // Add Email enviado
                AddRegistro(aEmail, aArquivo);
                mLog.Lines.Clear;
           End;
      End;

        Application.MessageBox(PChar('Envio concluído.'), 'Concluído',MB_OK+MB_ICONINFORMATION);
   Finally
       bEnviar.Enabled := True;
   End;
   Application.ProcessMessages;
end;

procedure TFrmSendMail.ACBrMail1BeforeMailProcess(Sender: TObject);
begin
  mLog.Lines.Add('Antes de Enviar o email: '+ TACBrMail(Sender).Subject);
end;

procedure TFrmSendMail.ACBrMail1MailException(const AMail: TACBrMail;
  const E: Exception; var ThrowIt: Boolean);
begin
  ShowMessage(E.Message);
  ThrowIt := False;
  mLog.Lines.Add('*** Erro ao Enviar o email: '+ AMail.Subject);
end;

procedure TFrmSendMail.ACBrMail1MailProcess(const AMail: TACBrMail;
  const aStatus: TMailStatus);
begin
  ProgressBar1.Position := Integer( aStatus );

  case aStatus of
    pmsStartProcess:
      mLog.Lines.Add('Iniciando processo de envio.');
    pmsConfigHeaders:
      mLog.Lines.Add('Configurando o cabeçalho do e-mail.');
    pmsLoginSMTP:
      mLog.Lines.Add('Logando no servidor de e-mail.');
    pmsStartSends:
      mLog.Lines.Add('Iniciando os envios.');
    pmsSendTo:
      mLog.Lines.Add('Processando lista de destinatários.');
    pmsSendCC:
      mLog.Lines.Add('Processando lista CC.');
    pmsSendBCC:
      mLog.Lines.Add('Processando lista BCC.');
    pmsSendReplyTo:
      mLog.Lines.Add('Processando lista ReplyTo.');
    pmsSendData:
      mLog.Lines.Add('Enviando dados.');
    pmsLogoutSMTP:
      mLog.Lines.Add('Fazendo Logout no servidor de e-mail.');
    pmsDone:
    begin
      mLog.Lines.Add('Terminando e limpando.');
      ProgressBar1.Position := ProgressBar1.Max;
    end;
  end;

  mLog.Lines.Add('   '+AMail.Subject);

  Application.ProcessMessages;
end;

procedure TFrmSendMail.ACBrMail1AfterMailProcess(Sender: TObject);
begin
  mLog.Lines.Add('Depois de Enviar o email: '+ TACBrMail(Sender).Subject);
end;

procedure TFrmSendMail.AjustaParametrosDeEnvio;
begin
  ACBrMail1.From     := dmADM.cdsConfigEmailLOGIN.AsString;   //   'one.supersonic2@gmail.com';
  ACBrMail1.FromName := dmADM.cdsConfigEmailLOGIN.AsString;   // 'Fula do Tal';
  ACBrMail1.Host     := dmADM.cdsConfigEmailSMTP.AsString;    // 'smtp.gmail.com'; // troque pelo seu servidor smtp
  ACBrMail1.Username := dmADM.cdsConfigEmailLOGIN.AsString;   // 'one.supersonic2@gmail.com';
  ACBrMail1.Password := dmADM.cdsConfigEmailSENHA.AsString;
  ACBrMail1.Port :=  dmADM.cdsConfigEmailPORTA.AsString;     // troque pela porta do seu servidor smtp
  ACBrMail1.SetTLS := False;
  If (dmADM.cdsConfigEmailTSL.AsBoolean) then
      ACBrMail1.SetTLS := True;  // Verifique se o seu servidor necessita SSL
  ACBrMail1.SetSSL := False;
  If (dmADM.cdsConfigEmailSSL.AsBoolean) then
     ACBrMail1.SetSSL := True;
  
  //ACBrMail1.AddCC('roneyweb@ig.com.br'); // opcional
  //ACBrMail1.AddReplyTo('um_email'); // opcional
  //ACBrMail1.AddBCC('um_email'); // opcional
  ACBrMail1.Priority := MP_normal;
  ACBrMail1.ReadingConfirmation := False; // solicita confirmação de leitura
end;

procedure TFrmSendMail.Fechar1Click(Sender: TObject);
begin
     Close;
end;

procedure TFrmSendMail.CarregarListaClientes(aNomeFile: String);
var
    ArqTxt : TextFile;
    linha : string;
begin
     listaCliente.Clear;
     AssignFile(ArqTxt,aNomeFile);
     Try
          Reset(ArqTxt);
          while not eof(ArqTxt) do
          begin
              // 0000010::DROGATERPI
              Readln(ArqTxt, Linha);
              listaCliente.Items.Add(linha);
          end;
     Finally
           Closefile(ArqTxt);
     End;
end;

procedure TFrmSendMail.FormShow(Sender: TObject);
begin
     CarregarListaClientes('listaclientes.txt');
     CarregarListaEmails('listaemail.txt');
     //
     CarregarDados;
     cdsListaEnviados.Close;
     cdsListaEnviados.Open;
     cdsListaEnviados.EmptyDataSet;
end;

procedure TFrmSendMail.CarregarListaEmails(aNomeFile: String);
var
    ArqTxt : TextFile;
    linha : string;
    iCont : Integer;
begin
     listEmails.Clear;
     iCont := 1;
     AssignFile(ArqTxt,aNomeFile);
     Try
          Reset(ArqTxt);
          while not eof(ArqTxt) do
          begin
              // roneyweb@ig.com.br::0000010_000321801_05062007.PDF
              Readln(ArqTxt, Linha);
              listEmails.Items.Add(linha);
              iCont := iCont + 1;
          end;
     Finally
           Closefile(ArqTxt);
     End;
     //
     Label1.Caption := 'Registro(s): '+InttoStr(iCont);
end;

procedure TFrmSendMail.Configuraes1Click(Sender: TObject);
begin
     Application.CreateForm(TFrmConfigEmail, FrmConfigEmail);
     Try
          FrmConfigEmail.ShowModal;
     Finally
          FrmConfigEmail.Free;
     End;
     CarregarDados;
end;

procedure TFrmSendMail.CarregarDados;
begin
    edtDe.Text     := dmADM.cdsConfigEmailNOME_DE.AsString;
    edSubject.Text := dmADM.cdsConfigEmailASSUNTO.AsString;
    mAltBody.Lines.Text := dmADM.cdsConfigEmailMENSAGEM.AsString;
    //
end;

procedure TFrmSendMail.AddRegistro(aEmail, aFile: String);
begin
     With cdsListaEnviados do
     begin
          Append;
          FieldByname('email').AsString := aEmail;
          FieldByname('arquivo').AsString := aFile;
          Post;
     End;
end;

procedure TFrmSendMail.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
     cdsListaEnviados.EmptyDataSet;
     cdsListaEnviados.Close;
end;

end.





